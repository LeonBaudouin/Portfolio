@import "_general.scss";

@import "_breakpoint_versions.scss";
@import "_button.scss";
@import "_contact.scss";
@import "_nav.scss";
@import "_scroll_icon.scss";
@import "_titles.scss";

@import "first_page/_scroll_exceptions.scss";
@import "first_page/_main_title.scss";
@import "_utils_class.scss";



html {
	height: 100%;
}

body {
	height: 100%;
	width: 100%;
	margin: 0;
	font-family: 'Raleway', sans-serif;

	overflow: hidden;
}

.container {

	height: 100%;
	--margin-top: 0;

	.paragraph {
		margin-right: 10px;
		@include interpolate(max-width, $regular-page-breakpoint, 1366px, 200px, 300px);
		@include interpolate(font-size, 40rem, 64rem,  0.72rem, 1rem);
	}

	& .page {

		height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
		align-items: flex-end;
	
		&.accueil {
			align-items: center;
        }
	}
}


.section {
	position: relative;

	margin-bottom: 20px;
	top: 0;

	width: calc(100% - var(--margin-side-buttons-right) * 1);
	height: calc(100% - var(--margin-side-buttons-top) * 4);


	transition: top 500ms ease;

	@media screen and (min-width: $regular-page-breakpoint) {
		width: 100%;
		height: 100%;
	}


	&-background {

		--rotation: 0deg;

		position: absolute;
		overflow: hidden;

		right: 0;
		z-index: -1;

		width: 0%;
		height: 100%;
	
		box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
		background-color: $color-lightest-grey;
		transition: width 500ms 400ms cubic-bezier(0,.64,0,1.1);

		@media screen and (min-width: $regular-page-breakpoint) {

			--rotation: -90deg;
			
			height: 0;
			transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1, var(--rotation));

			transition: transform 3s 200ms cubic-bezier(0,.87,0,1),
                        width 1.5s 200ms cubic-bezier(.1,.86,0,1),
                        height 1.5s 200ms cubic-bezier(.1,.86,0,1);
		}

		.background-empty-squares {
			display: none;
			@include min_query(display, $regular-page-breakpoint, block);

			&-element {
				position: absolute;
				border: 2px solid $color-light-grey;
				width: 0;
				height: 0;
				
				transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,0deg);

				transition: width 800ms ease,
							height 800ms ease,
							transform 10s cubic-bezier(0,.98,0,.99);

				&.thick {
					border-width: 10px;
				}
			}
		}
		
		.active & {
			width: 100%;

			.background-empty-squares-element {
				transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,235deg);
				animation: background-square-rotation 90s linear infinite;

				@for $i from 1 through 4  {
					&:nth-child(#{$i}) {
						width: 18vw + ($i - 1) * 6vw;
						height: 18vw + ($i - 1) * 6vw;

						transition-delay: 75ms * (4 - ($i - 1));
						animation-delay: 75ms * (4 - ($i - 1)) + 3s;
					}
				}

				@keyframes background-square-rotation {
					0% {
						transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,224.5deg);
					}
					100% {
						transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,595deg);
					}
				}
			}
		}
	}

	&-content {

		--button-size: 56px;
		@media screen and (min-width: 360px) {
			--button-size: calc(5.45455vw + 36.36364px);
		}
		@media screen and (min-width: $regular-page-breakpoint) {
			--button-size: calc(3.53357vw + 51.73145px);
		}
		@media screen and (min-width: 1366px) {
			--button-size: 100px;
		}

		display: grid;

		height: 100%;
		padding: $padding 0 $padding $padding;
		margin-right: var(--margin-side-buttons-right);

		grid-template-columns: auto var(--button-size);
		grid-template-rows: 1fr 1fr auto;
		grid-template-areas:
				"title all"
				"none none"
				"description continuer";

		& .fade-from-left {
			opacity: 0;
			transition: opacity 200ms linear,
						transform 500ms ease;
			.active & {opacity: 1;}
			
			@media screen and (min-width: $regular-page-breakpoint) {
				transform: translate3d(-20px, 0, 0);
				.active & {transform: translate3d(0, 0, 0);}

				&.button {
					transform: translate3d(-20px, 0, 0) rotate3d(0,0,1,-45deg);
					.active & {transform: translate3d(0, 0, 0) rotate3d(0,0,1,-45deg);}
				}
			}
		}

		& .regular-title {
			grid-area: title;
			align-self: start;
			position: relative;
		}

		& .description {
			grid-area: description;
		}

		& .continuer {
			align-self: center;
			justify-self: center;

			grid-area: continuer;
		}

		& .all {
			align-self: center;
			justify-self: center;
			grid-area: all;
		}

		& .next-project {
			align-self: center;
			justify-self: center;
			grid-area: next-project;

			display: none;
			@include min_query(display, $regular-page-breakpoint, block);
		}
	}
}


.photo-projet, .photo-lab {
	position: absolute;
	top: 50%;
	
	transform: translate3d(-100%, -50%, 0);
	transition: transform 4s 600ms cubic-bezier(0,.66,0,.99);

	@media screen and (min-width: $regular-page-breakpoint) {
		transition: transform 3s 200ms cubic-bezier(0,.87,0,1);
		transform: translate3d(-100%, -35%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
	}
	

	@keyframes photo-hiding-phone {
		0% {
			transform: translate3d(-100%, -50%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
		}
		100% {
			transform: translate3d(-20%, -50%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
		}
	}
}


.profil {

	$desktop-delay-offset: 500ms;

	& .regular-title {
		justify-self: end;
		@include min_query(margin-right, $regular-page-breakpoint, 11vw);

		.first-part:before {
			transition-delay: 400ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 500ms + $desktop-delay-offset);
		}

		.first-part-content {
			transition-delay: 500ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 600ms + $desktop-delay-offset);
		}
		.second-part-content {
			transition-delay: 600ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 700ms + $desktop-delay-offset);
		}
	}

	& .description {
		align-self: center;
		@include min_query(margin-right, $regular-page-breakpoint, 6vw);
		@include min_query(justify-self, $regular-page-breakpoint, end);
		@include min_query(text-align, $regular-page-breakpoint, right);

		transition-delay: 800ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 900ms + $desktop-delay-offset);
	}

	& .continuer {
		transition-delay: 1000ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 1100ms + $desktop-delay-offset);
	}

	& .section-content {
		grid-template-areas:
				"title title"
				"none none"
				"description continuer";

		@media screen and (min-width: $regular-page-breakpoint) {
			margin-right: calc(var(--margin-side-buttons-right) + 9vw);
			grid-template-rows: repeat(3,auto);
			grid-template-areas: "title title"
								 "description description"
								 "none continuer";
			align-content: space-around;
		}
	}

	.section-background {

		@media screen and (min-width: $regular-page-breakpoint) {
			left: 50%;
			right: unset;
			top: 100%;
		}

		.background-strokes {

			position: absolute;
			top: 50%;
			right: 0;

			width: 190px;
			transform: translate(100%, -50%) rotate3d(0,0,1,-45deg);
			transition: transform 4s 600ms cubic-bezier(0,.66,0,.99);

			@include min_query(display, $regular-page-breakpoint, none);
			
			&-line {

				$scroll-line--length: 120;

				stroke: $color-light-grey;
				stroke-width: 2px;

				stroke-dasharray: $scroll-line--length;
				stroke-dashoffset: 0;
				
				animation: background-line-dash 18s ease-in infinite;
		

				@include delay_by_child(animation, 6s, 100ms, 4);

				@keyframes background-line-dash {
					0% {
						stroke-dashoffset: 0;
					}
					4% {
						stroke-dashoffset: 2 * $scroll-line--length;
					}
					4.01% {
						stroke-dashoffset: 0;
					}
				}
			}
		}
		
		.photo-profil {
			position: absolute;
			bottom: 0;
			
			transform: translate3d(-100%, 3%, 0);
			transition: transform 4s 600ms cubic-bezier(0,.66,0,.99);

			@media screen and (min-width: $regular-page-breakpoint) {
				bottom: unset;
				top: 0;
				transition: transform 3s 200ms cubic-bezier(0,.87,0,1);
				transform: translate3d(-100%, -35%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
			}
		}
	}

	&.active {

		.section-background {

			@media screen and (min-width: $regular-page-breakpoint) {
				width: 170vh;
				height: 170vh;
				--rotation: -19deg;
			}

			.background-strokes {
				transform: translate(30%, -50%) rotate3d(0,0,1,-45deg);
			}
			
			.photo-profil {
				transform: translate3d(-80%, 3%, 0);

				@media screen and (min-width: $regular-page-breakpoint) {
					transform: translate3d(-40%, -18%, 0) rotate3d(0,0,1,19deg);
				}
			}
		}
	}	
}


.projets {

	$project-exposition-time: 7s;
	$desktop-delay-offset: 800ms;

	.section {
		&-content {
			grid-template-rows: auto 1fr auto;
			@media screen and (min-width: $regular-page-breakpoint) {
				padding: calc(var(--margin-side-buttons-right) + 6vw) 
						0
						var(--margin-side-buttons-right)
						0;
				margin-left: calc(var(--margin-side-buttons-right) + 9vw);
				grid-template-columns: var(--button-size) auto;
				grid-template-areas:
						"all title"
						"next-project none"
						"continuer description";

				grid-column-gap: 2vw;
			}
		}

		&-background {
			
			@media screen and (min-width: $regular-page-breakpoint) {
				--rotation:  180deg;
				
				transition: transform 3s 200ms cubic-bezier(0,.87,0,1),
							width 3s 200ms cubic-bezier(.1,.86,0,1),
							height 3s 200ms cubic-bezier(.1,.86,0,1);
			}

			&:before {
				content: "";
				position: absolute;
				bottom: 0;
				width: 100%;
				border-bottom: 3px $color-medium-grey solid;

			}

			&:after {
				content: "";
				position: absolute;
				bottom: 0;
				border-bottom: 3px $color-red solid;
			}

			@media screen and (min-width: $regular-page-breakpoint) {
				left: 42%;
				right: unset;
				top: 10%;
			}

			@keyframes border-loader {
				0% {
					width: 100%;
				}
				3% {
					width: 0;
				}

				100% {
					width: 100%;
				}
			}
		}
	}

	& .regular-title {
		justify-self: start;
		
		.first-part:before {
			transition-delay: 600ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 00ms + $desktop-delay-offset);
		}
		.first-part-content {
			transition-delay: 700ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 100ms + $desktop-delay-offset);
		}
		.second-part-content {
			transition-delay: 800ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 200ms + $desktop-delay-offset);
		}
	}

	& .description {
		transition-delay: 1000ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 1000ms + $desktop-delay-offset);
	}

	& .continuer {
		transition-delay: 1200ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 800ms + $desktop-delay-offset);
	}
	
	& .all {
		transition-delay: 400ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 400ms + $desktop-delay-offset);
	}

	& .next-project {
		@include min_query(transition-delay, $regular-page-breakpoint, 600ms + $desktop-delay-offset);

		&-after, &-before {
			@include min_query(transition-delay, $regular-page-breakpoint, 650ms + $desktop-delay-offset);
		}
	}

	.project {

		max-width: 400px;
		@include min_query(margin-left, $regular-page-breakpoint, 28px);
		
		&>* {
			position: relative;

			&:before, &:after {
				content: "";
				display: block;
				position: absolute;
				
				height: 90%;
				--width: 2px;
				width: var(--width);
				@include min_query(--width, $regular-page-breakpoint, 3px);
				left: -20px;
				@include min_query(left, $regular-page-breakpoint, -28px);
				top: 50%;
				
				transform: translate(0, -50%);
			}

			&:before {
				background-color: $color-darkest-grey;
			}

			&:after {
				transition: width 400ms ease;
				background-color: $color-light-grey;
				z-index: -1;
			}
		}
		
		&-title {
			font-weight: 800;
			color: $color-darkest-grey;
			@include interpolate(font-size, 40rem, 64rem,  1.375rem, 2.5rem);
		}

		&-type {
			margin: 0.15rem 0 0.3rem 0;

			@include interpolate(font-size, 40rem, 64rem,  1rem, 2rem);
			font-weight: 200;
			color: $color-darkest-grey;
		}

		&-skills {
			@include interpolate(height, 40rem, 64rem,  2rem, 4rem);

			&-icon {
				height: 100%;
			}

			&:before, &:after {
				height: 110%;
			}
		}
	}

	&.active {

		.section-background {

			@media screen and (min-width: $regular-page-breakpoint) {
				width: 200vh;
				height: 200vh;
				--rotation: -19deg;
			}

			&:after {
				animation: border-loader $project-exposition-time linear infinite;
			}
			
			.background-empty-squares-element {

				transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,-235deg);

				animation: background-square-rotation-inverse 90s linear infinite;

				@for $i from 1 through 4  {
					&:nth-child(#{$i}) {
						width: 8vw + ($i - 1) * 5vw;
						height: 8vw + ($i - 1) * 5vw;
					}
				}

				@keyframes background-square-rotation-inverse {
					0% {
						transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,224.5deg);
					}
					100% {
						transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,-135.5deg);
					}
				}
			}
		}

		.photo-projet {
			transform: translate3d(-40%, -50%, 0);
			animation: photo-hiding-phone $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;

			@media screen and (min-width: $regular-page-breakpoint) {
				top: 80%;
				right: 0;
				transform: translate3d(0, -15%, 0) rotate3d(0,0,1,19deg);
				animation: photo-hiding-desktop-projet $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
			}

			
			@keyframes photo-hiding-desktop-projet {
				0% {
					transform: translate3d(110%, -30%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
				}
				100% {
					transform: translate3d(10%, -50%, 0) rotate3d(0,0,1,calc(0deg - var(--rotation)));
				}
			}
		}

		.project {

			@for $i from 1 through 3 {
				&>*:nth-child(#{$i}) {
					&:before {
						animation-delay: 100ms * ($i - 1);
					}
					&:after {
						transition-delay: 100ms * ($i - 1);
					}
				}
			}

			&>*:before {
				animation: project-reveal $project-exposition-time ease infinite;
			}

			&:hover>*:after {
				width: 100%;
			}
			
			@keyframes project-reveal {
				0% {
					width: 100%;
				}
				5% {
					width: var(--width);
				}
				95% {
					width: var(--width);
				}
				100% {
					width: 100%;
				}
			}
		}

		.next-project {
			&-progress-circle {
				
				&-loading {
					animation: progress-loading $project-exposition-time * 2 infinite linear;
				}
				
				&-idle {
					animation: progress-idle $project-exposition-time * 2 infinite linear reverse;
				}
				
				@keyframes progress-loading {
					0% {
						stroke-dashoffset: -339.292;
					}
					100% {
						stroke-dashoffset: 339.292;
					}
					
				}
				
				@keyframes progress-idle {
					0% {
						stroke-dashoffset: 0;
					}
					100% {
						stroke-dashoffset: -339.292 * 2;
					}
					
				}
			}

			&-indicator {
				&-current {
					&-content {
						animation: indicator-hiding $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
					}
					
					@keyframes indicator-hiding {
						0% {
							right: calc(var(--right) - var(--lateral-offset));
						}
						
						10% {
							right: var(--right);
						}
					}
				}
			}
		}
	}
}

.lab {
	overflow: hidden;
	@include min_query(overflow, $regular-page-breakpoint, unset);
	position: relative;
	$desktop-delay-offset: 700ms;

	.contact {
		position: absolute;
		width: 100%;

		bottom: 0;
		z-index: $z-index-contact;

		@include min_query(z-index, $regular-page-breakpoint, 1);

		&-background {
			position: absolute;
			bottom: -2vh;
			right: 20vw;

			width: 0;
			height: 0;

			border: $color-red 2px solid;
			background-color: rgba($color-darkest-grey, .85);
			transform: translate3d(50%, 50%, 0) rotate3d(0,0,1, 90deg);

			transition: transform 3s 1200ms cubic-bezier(0,.87,0,1),
                        width 1.5s 1200ms cubic-bezier(.1,.86,0,1),
                        height 1.5s 1200ms cubic-bezier(.1,.86,0,1);

			@media screen and (min-width: $regular-page-breakpoint) {
				transform: translate3d(-50%, 50%, 0) rotate3d(0,0,1,-8deg);
				bottom: 0;
				left: 12vw;
			}

		}

		&-content {

			position: absolute;
			display: flex;

			height: calc(var(--margin-side-buttons-top) * 3.5);
			width: 70%;
			max-width: 400px;
			bottom: 0;
			right: 0;
			
			flex-direction: column;
			align-items: flex-end;
			justify-content: center;

			@media screen and (min-width: $regular-page-breakpoint) {
				left: 0;
				justify-content: space-around;
				align-items: flex-start;
			}

			&-grid {
				display: grid;
				position: relative;
				
				grid-template-rows: auto 1fr;
				grid-template-columns: repeat(4, 1fr);
				grid-template-areas: 
				"cv cv mail mail"
				"codepen instagram github youtube";
				
				grid-row-gap: 1vh;
				
				margin-right: 20px;
				
				height: 64%;
				width: calc(100% - 20px);
				max-width: 250px;
				
				@media screen and (min-width: $regular-page-breakpoint) {
					grid-template-areas: 
							"cv mail mail mail"
							"codepen instagram github youtube";
					grid-column-gap: 0.5vw;
					max-width: unset;
					width: 80%;
					height: 50%;
					margin-left: 4vw;
				}

			}

			&-title {
				color: $color-lightest-grey;
				margin-left: 6vw;
				font-weight: 400;
			}

			&-link {
				color: $color-lightest-grey;

				text-decoration: none;
				text-transform: uppercase;
				
				font-weight: 800;
				font-size: 1.75rem;
				@include min_query(font-size, $regular-page-breakpoint, 0.8rem);

				padding-bottom: 5px;

				opacity: 0;

				transform: translate3d(10px, 0, 0);
				@include min_query(transform, $regular-page-breakpoint, translate3d(-10px, 0, 0));

				transition: opacity 400ms cubic-bezier(.09,.64,.19,.99),
							transform 450ms 50ms cubic-bezier(.09,.64,.19,.99),
							color 200ms cubic-bezier(.09,.64,.19,.99);


				&:nth-of-type(2) {transition-delay: 1500ms;}
				&:nth-of-type(4) {transition-delay: 1400ms;}
				&:nth-of-type(5) {
					transition: opacity 400ms 1900ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1900ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);}
				&:nth-of-type(6) {
					transition: opacity 400ms 1800ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1800ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);}
				&:nth-of-type(7) {
					transition: opacity 400ms 1700ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1700ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);}
				&:nth-of-type(8) {
					transition: opacity 400ms  1600ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms  1600ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);}
			}

			.contact-icon {
				@include min_query(font-size, $regular-page-breakpoint, 2.8rem);

                &:hover {
                    color: $color-red;
                }
			}

			.mail, .cv {

				display: inline-block;
				position: relative;
				justify-self: start;

				&:before {
					content: "";

					display: block;
					position: absolute;

					bottom: 2px;
					width: 75%;

					border-bottom: 1px solid $color-red;
				}
			}

			.mail {
				grid-area: mail;
			}
			.cv {
				grid-area: cv;
			}
		}
	}

	.section {
		margin-bottom: 10vh;
		height: calc(100% - var(--margin-side-buttons-top) * 5.5);
		@include min_query(height, $regular-page-breakpoint, 100%);

		&-content {

			grid-template-rows: auto 1fr auto;

			@media screen and (min-width: $regular-page-breakpoint) {
				
				padding: calc(var(--margin-side-buttons-top) + 6vw) 
				0
				var(--margin-side-buttons-top)
				0;
				margin-right: calc(var(--margin-side-buttons-right) + 9vw);
				grid-template-columns: auto var(--button-size);
				grid-template-areas:
				"title all"
				"none next-project"
				"description continuer";
				
				grid-column-gap: 2vw;
			}
		}

		&-background {
			&:before {
				content: "";
				position: absolute;
				z-index: 1;
				bottom: 0;
				width: 100%;
				border-bottom: 3px $color-medium-grey solid;

			}

			&:after {
				content: "";
				position: absolute;
				z-index: 1;
				bottom: 0;
				border-bottom: 3px $color-red solid;
			}

			@media screen and (min-width: $regular-page-breakpoint) {
				--rotation: 18.5deg;

				left: 50%;
				top: 80%;

				&:after, &:before {
					bottom: unset;
					top: 0;
				}
			}

			@keyframes border-loader {
				0% {
					width: 100%;
				}
				3% {
					width: 0;
				}

				100% {
					width: 100%;
				}
			}			

			.background-squares {

				&-group {
					width: 100%;

					&-element {
						display: inline-block;
						position: absolute;
						background-color: $color-light-grey;
					}
				}

				&:nth-of-type(1) {
					.background-squares-group {
						$square-unit: 6vw;
					
						&-element {
							padding-top: $square-unit;
							width: $square-unit;
						}


						&:nth-of-type(1) {
							.background-squares-group-element {
								&:nth-of-type(1) {left: $square-unit}
								&:nth-of-type(2) {left: $square-unit * 2}
								&:nth-of-type(3) {left: $square-unit * 5}
								&:nth-of-type(4) {left: $square-unit; top: $square-unit}
								&:nth-of-type(5) {left: $square-unit * 3; top: $square-unit}
								&:nth-of-type(6) {left: $square-unit * 4; top: $square-unit}
								&:nth-of-type(7) {top: $square-unit * 2}
								&:nth-of-type(8) {top: $square-unit * 3}
							}
						}

						&:nth-of-type(2) {
							.background-squares-group-element {
								&:nth-of-type(1) {right: 0; bottom: 0}
								&:nth-of-type(2) {right: $square-unit; bottom: 0}
								&:nth-of-type(3) {right: $square-unit*2; bottom: 0}
								&:nth-of-type(4) {right: $square-unit*5; bottom: 0}
								&:nth-of-type(5) {right: 0; bottom: $square-unit}
								&:nth-of-type(6) {right: 0; bottom: $square-unit*4}
								&:nth-of-type(7) {right: 0; bottom: $square-unit*6}
								&:nth-of-type(8) {right: 0; bottom: $square-unit*7}
								&:nth-of-type(9) {right: $square-unit*2; bottom: $square-unit}
								&:nth-of-type(10) {right: $square-unit*3; bottom: $square-unit}
								&:nth-of-type(11) {right: $square-unit; bottom: $square-unit*3}
								&:nth-of-type(12) {right: $square-unit; bottom: $square-unit*4}
								&:nth-of-type(13) {right: $square-unit; bottom: $square-unit*5}
								&:nth-of-type(14) {right: $square-unit*2; bottom: $square-unit*2}
								&:nth-of-type(15) {right: $square-unit*2; bottom: $square-unit*3}
							}
						}

						&:nth-of-type(3) {
							.background-squares-group-element {
								&:nth-of-type(1) {right: $square-unit; top: $square-unit*2}
								&:nth-of-type(2) {right: $square-unit*2; top: $square-unit*3}
								&:nth-of-type(3) {right: $square-unit*3; top: $square-unit*4}
								&:nth-of-type(4) {right: $square-unit*4; top: $square-unit*2}
								&:nth-of-type(5) {right: $square-unit*4; top: $square-unit*3}
							}
						}
					}
				}

				&:nth-of-type(2) {					
					.background-squares-group {
						
						$square-unit: 3vw;
						width: 120%;
						transform: rotate3d(0, 0, 1, calc(0deg - var(--rotation)));

						&-element {
							padding-top: $square-unit;
							width: $square-unit;
						}


						&:nth-of-type(1) {

							position: absolute;
							top: 10vw;
							right: 7vw;

							.background-squares-group-element {
								&:nth-of-type(1) {top: $square-unit * 3; right: 0}
								&:nth-of-type(2) {top: $square-unit * 4; right: 0}
								&:nth-of-type(3) {top: $square-unit * 5; right: 0}
								&:nth-of-type(4) {top: $square-unit * 2; right: $square-unit * 2}
								&:nth-of-type(5) {top: $square-unit * 2; right: $square-unit * 3}
								&:nth-of-type(6) {top: $square-unit; right: $square-unit * 2}
								&:nth-of-type(7) {top: $square-unit; right: $square-unit * 4}
								&:nth-of-type(8) {top: $square-unit * 3; right: $square-unit}
								&:nth-of-type(9) {top: $square-unit * 6; right: $square-unit}
							}
						}

						&:nth-of-type(2) {

							position: absolute;
							left: 50%;
							top: 50%;
							width: $square-unit;
							height: $square-unit;
							transform: translate3d(-50%, -50%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
							
							.background-squares-group-element {
								&:nth-of-type(1) {bottom: $square-unit*3}
								&:nth-of-type(2) {bottom: $square-unit*5}
								&:nth-of-type(3) {bottom: $square-unit*4; left: $square-unit}
								&:nth-of-type(4) {bottom: $square-unit*6; left: $square-unit}
								&:nth-of-type(5) {bottom: $square-unit*4; right: $square-unit}
								&:nth-of-type(6) {bottom: $square-unit*3; left: $square-unit*2}
								&:nth-of-type(7) {bottom: $square-unit*2; left: 0}
								&:nth-of-type(8) {bottom: $square-unit*2; right: $square-unit}
								&:nth-of-type(9) {bottom: $square-unit; left: $square-unit}
								&:nth-of-type(10) {bottom: $square-unit; left: $square-unit*2}
								&:nth-of-type(11) {bottom: $square-unit; right: $square-unit}
								&:nth-of-type(12) {bottom: $square-unit; right: $square-unit*2}
								&:nth-of-type(13) {top: 0; left: $square-unit}
								&:nth-of-type(14) {top: 0; right: $square-unit}
								&:nth-of-type(15) {top: 0; right: $square-unit*3}
								&:nth-of-type(16) {top: $square-unit}
								&:nth-of-type(17) {top: $square-unit*2; left: $square-unit}
							}
						}
					}
				}	
			}
		}
	}

	.all {
		transition-delay: 500ms;
	}

	.regular-title {
		justify-self: start;
		@include min_query(justify-self, $regular-page-breakpoint, end);
		@include min_query(text-align, $regular-page-breakpoint, right);
		
		.first-part:before {
			transition-delay: 600ms;
			@media screen and (min-width: $regular-page-breakpoint) {
				transition-delay: 00ms + $desktop-delay-offset;
				right: 0;
				left: unset;
			}
		}
		.first-part-content {
			transition-delay: 700ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 100ms + $desktop-delay-offset);
		}
		.second-part-content {
			transition-delay: 800ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 200ms + $desktop-delay-offset);
		}
	}

	.description {
		transition-delay: 1000ms;
		@include min_query(justify-self, $regular-page-breakpoint, end);
		@include min_query(text-align, $regular-page-breakpoint, right);
	}

	.continuer {
		transition-delay: 1200ms;
	}

	&-title {
		display: inline-block;
		position: relative;
		color: #333131;
		@include interpolate(font-size, 40rem, 64rem, 1.2rem, 1.75rem);

		&:before {
			content: "";
			position: absolute;
			display: block;

			height: 1rem;
			width: 0;
			
			left: -0.2rem;
			bottom: -0.1rem;
			z-index: -1;

			transition: width 500ms 600ms cubic-bezier(0,.64,0,1.1);
			background: $color-light-grey;
		}
	}

	&.active {
		
		$project-exposition-time: 7s;

		.contact {
			&-background {
				@include interpolate(width, 400px, 1366px, 368px, 500px);
				@include interpolate(height, 400px, 1366px, 368px, 500px);
				transform: translate3d(50%, 50%, 0) rotate3d(0,0,1,-18deg);
				@include min_query(transform, $regular-page-breakpoint, translate3d(-50%, 50%, 0) rotate3d(0,0,1,-8deg));
			}

			&-content-link {
				opacity: 1;
				transform: translate3d(0, 0, 0);
			}
		}

		.section {
			&-background {
				@media screen and (min-width: $regular-page-breakpoint) {	
					width: 192vh;
					height: 192vh;
				}

				&:after {
					animation: border-loader $project-exposition-time linear infinite;
				}
			}
		}

		.lab-title {
			
			&-content {
				animation: change-lab-title $project-exposition-time 100ms cubic-bezier(1,0,0,1) infinite;
			}
			
			&:before {
				width: 100%;
			}

			@keyframes change-lab-title {
				0% {
					opacity: 0;
					transform: translate3d(10px,0,0);
				}
				5% {
					opacity: 1;
					transform: translate3d(0,0,0)
				}
				95% {
					opacity: 1;
					transform: translate3d(0,0,0)					
				}
				100% {
					opacity: 0;
					transform: translate3d(-10px,0,0);
				}
			}
		}

		.paragraph {
			animation: hiding-lab-paragraph $project-exposition-time linear 200ms infinite;

			@keyframes hiding-lab-paragraph {
				0% {
					opacity: 0;
				}
				5% {
					opacity: 1;
				}
				95% {
					opacity: 1;
				}
				100% {
					opacity: 0;
				}
			}
		}

		.photo-lab {
			transform: translate3d(-40%, -50%, 0);
			animation: photo-hiding-phone $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;

			@media screen and (min-width: $regular-page-breakpoint) {
				animation: photo-hiding-desktop-lab $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
			}
			
			@keyframes photo-hiding-desktop-lab {
				0% {
					transform: translate3d(-100%, 40%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
				}
				100% {
					transform: translate3d(-50%, -30%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
				}
			}
		}
		
		.next-project {
			&-progress-circle {
				
				&-loading {
					animation: progress-loading $project-exposition-time * 2 infinite linear;
				}
				
				&-idle {
					animation: progress-idle $project-exposition-time * 2 infinite linear reverse;
				}
				
				@keyframes progress-loading {
					0% {
						stroke-dashoffset: -339.292;
					}
					100% {
						stroke-dashoffset: 339.292;
					}
					
				}
				
				@keyframes progress-idle {
					0% {
						stroke-dashoffset: 0;
					}
					100% {
						stroke-dashoffset: -339.292 * 2;
					}
					
				}
			}

			&-indicator {
				&-current {
					&-content {
						animation: indicator-hiding $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
					}
					
					@keyframes indicator-hiding {
						0% {
							right: calc(var(--right) - var(--lateral-offset));
						}
						
						10% {
							right: var(--right);
						}
					}
				}
			}
		}
	}
}
