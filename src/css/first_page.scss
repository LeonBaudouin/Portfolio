@import "_general.scss";

@import "_breakpoint_versions.scss";
@import "_button.scss";
@import "_contact.scss";
@import "_nav.scss";
@import "_scroll_icon.scss";
@import "_titles.scss";

@import "first_page/_scroll_exceptions.scss";
@import "first_page/_main_title.scss";
@import "_utils_class.scss";



html {
	height: 100%;
}

body {
	height: 100%;
	width: 100%;
	margin: 0;
	font-family: 'Raleway', sans-serif;

	&::-webkit-scrollbar { 
		display: none; 
	}
}

.container {

	height: 100%;
	--margin-top: 0;

	.paragraph {
		margin-right: 10px;
		@include interpolate(max-width, $regular-page-breakpoint, 1366px, 200px, 300px);
		@include interpolate(font-size, 40rem, 64rem,  0.72rem, 1rem);
	}

	& .page {

		height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
	
		&.accueil {
			align-items: center;
        }

        &.profil, &.projets {
			align-items: flex-end;
		}
		
	}
}


.section {
	position: relative;

	margin-bottom: 20px;
	
	width: calc(100% - var(--margin-side-buttons-right) * 1);
	height: calc(100% - var(--margin-side-buttons-top) * 4);

	@media screen and (min-width: $regular-page-breakpoint) {
		width: 100%;
		height: 100%;
	}


	&-background {
		position: absolute;
		overflow: hidden;

		right: 0;

		width: 0%;
		height: 100%;
		z-index: -1;
		background-color: $color-lightest-grey;
	}

	&-content {

		--button-size: 56px;
		@media screen and (min-width: 360px) {
			--button-size: calc(5.45455vw + 36.36364px);
		}
		@media screen and (min-width: $regular-page-breakpoint) {
			--button-size: calc(3.53357vw + 51.73145px);
		}
		@media screen and (min-width: 1366px) {
			--button-size: 100px;
		}

		display: grid;

		height: 100%;
		padding: $padding 0 $padding $padding;
		margin-right: var(--margin-side-buttons-right);

		grid-template-columns: auto var(--button-size);
		grid-template-rows: 1fr 1fr auto;

		& .regular-title {
			grid-area: title;
			align-self: start;
			position: relative;
		}
		& .paragraph {
			grid-area: paragraph;

			opacity: 0;
			transition: opacity 200ms linear;
			.active & {opacity: 1;}
		}
		& .continuer {
			grid-area: continuer;

			opacity: 0;
			transition: opacity 200ms linear;
			.active & {opacity: 1;}
		}
	}
}

.profil {

	$desktop-delay-offset: 500ms;

	& .regular-title {
		justify-self: end;
		@include min_query(margin-right, $regular-page-breakpoint, 12vw);
	}

	& .paragraph {
		align-self: center;
		@include min_query(margin-right, $regular-page-breakpoint, 6vw);
		@include min_query(justify-self, $regular-page-breakpoint, end);
		@include min_query(text-align, $regular-page-breakpoint, right);

		transition-delay: 800ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 800ms + $desktop-delay-offset);
	}

	& .continuer {
		align-self: center;
		justify-self: center;

		transition-delay: 1000ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 1000ms + $desktop-delay-offset);
	}

	.section-content {
		grid-template-areas:
				"title title"
				"none none"
				"paragraph continuer";

		@media screen and (min-width: $regular-page-breakpoint) {
			margin-right: calc(var(--margin-side-buttons-right) + 8vw);
			grid-template-rows: repeat(3,15vh);
			grid-template-areas: "title title"
								 "paragraph paragraph"
								 "none continuer";
			align-content: space-around;
		}

		
		.regular-title {
			.first-part:before {
				transition-delay: 400ms;
				@include min_query(transition-delay, $regular-page-breakpoint, 400ms + $desktop-delay-offset);
			}

			.first-part-content {
				transition-delay: 500ms;
				@include min_query(transition-delay, $regular-page-breakpoint, 500ms + $desktop-delay-offset);
			}
			.second-part-content {
				transition-delay: 600ms;
				@include min_query(transition-delay, $regular-page-breakpoint, 600ms + $desktop-delay-offset);
			}
		}
	}

	.section-background {

		width: 0;
		transition: width 500ms 400ms cubic-bezier(0,.64,0,1.1);

		@media screen and (min-width: $regular-page-breakpoint) {
			left: 50%;
			right: unset;
			top: 100%;
			
			width: 0;
			height: 0;
			transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1, -90deg);

			transition: transform 3s 200ms cubic-bezier(0,.87,0,1),
                        width 1.5s 200ms cubic-bezier(.1,.86,0,1),
                        height 1.5s 200ms cubic-bezier(.1,.86,0,1);
		}

		.background-strokes {

			position: absolute;
			top: 50%;
			right: 0;

			width: 190px;
			transform: translate(100%, -50%) rotate3d(0,0,1,-45deg);
			transition: transform 4s 600ms cubic-bezier(0,.66,0,.99);

			
			&-line {

				$scroll-line--length: 120;

				stroke: $color-light-grey;
				stroke-width: 2px;

				stroke-dasharray: $scroll-line--length;
				stroke-dashoffset: 0;
				
				animation: background-line-dash 18s ease-in infinite;
		
				@for $i from 1 through 4 {
					&:nth-child(#{$i}) {
						animation-delay: 6s + $i * 100ms;
					}
				}

				@keyframes background-line-dash {
					0% {
						stroke-dashoffset: 0;
					}
					4% {
						stroke-dashoffset: 2 * $scroll-line--length;
					}
					4.01% {
						stroke-dashoffset: 0;
					}
				}
			}
		}
		
		.photo-profil {
			position: absolute;
			bottom: 0;
			
			transform: translate3d(-100%, 0, 0);
			opacity: .23;
			transition: transform 4s 600ms cubic-bezier(0,.66,0,.99);

			@media screen and (min-width: $regular-page-breakpoint) {
				bottom: unset;
				top: 0;
				transform: translate3d(-100%, -35%, 0) rotate3d(0,0,1,20deg);
			}
		}
	}

	&.active {

		.section-background {
			width: 100%;

			@media screen and (min-width: $regular-page-breakpoint) {
				width: 170vh;
				height: 170vh;
				transform: translate3d(-50%, -50%, 0) rotate3d(0,0,1,-19deg);
			}

			&:after {
				content: "";
				display: inline-block;
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);
				width: 5px;
				height: 5px;
				background-color: blue;
			}

			.background-strokes {
				transform: translate(30%, -50%) rotate3d(0,0,1,-45deg);

			}
			
			.photo-profil {
				transform: translate3d(-40%, 0, 0);

				@media screen and (min-width: $regular-page-breakpoint) {
					transform: translate3d(0, -15%, 0) rotate3d(0,0,1,19deg);
				}
			}
		}
	}	
}