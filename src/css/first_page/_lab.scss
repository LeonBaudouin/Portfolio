
.main-page{
.lab {
	overflow: hidden;
	@include min_query(overflow, $regular-page-breakpoint, unset);
	position: relative;
	$desktop-delay-offset: 700ms;

	.contact {
		position: absolute;
		width: 100%;

		bottom: 0;

		&-background {
			bottom: -2vh;
			right: 20vw;

			transform: translate3d(50%, 50%, 0) rotate3d(0,0,1, 90deg);

			transition: transform 3s 1200ms cubic-bezier(0,.87,0,1),
                        width 1.5s 1200ms cubic-bezier(.1,.86,0,1),
                        height 1.5s 1200ms cubic-bezier(.1,.86,0,1);

			@media screen and (min-width: $regular-page-breakpoint) {
				transform: translate3d(-50%, 50%, 0) rotate3d(0,0,1,-90deg);
				bottom: 0;
				left: 12vw;
			}

		}

		&-content {

			position: absolute;

			height: calc(var(--margin-side-buttons-top) * 3);
			width: 70%;
			max-width: 400px;
			bottom: 0;
			right: 0;
			
			align-items: flex-end;
			justify-content: center;

			@media screen and (min-width: $regular-page-breakpoint) {
				left: 0;
				justify-content: space-around;
				align-items: flex-start;
			}

			&-grid {
				
				grid-row-gap: 1vh;
				
				margin-right: 20px;
				
				height: 64%;
				width: calc(100% - 20px);
				max-width: 250px;
				
				@media screen and (min-width: $regular-page-breakpoint) {
					grid-column-gap: 0.5vw;
					max-width: unset;
					width: 80%;
					height: 50%;
					margin-left: 4vw;
				}

			}

			&-title {
				margin-left: 6vw;

				transition: opacity 400ms 1800ms cubic-bezier(.09,.64,.19,.99),
							transform 450ms 1800ms cubic-bezier(.09,.64,.19,.99);
			}

			&-link {
				font-size: 1.75rem;
				@include min_query(font-size, $regular-page-breakpoint, 0.8rem);

				padding-bottom: 5px;

				transition: opacity 400ms cubic-bezier(.09,.64,.19,.99),
							transform 450ms 50ms cubic-bezier(.09,.64,.19,.99),
							color 200ms cubic-bezier(.09,.64,.19,.99);

				&:nth-of-type(1) {transition-delay: 1550ms;}
				&:nth-of-type(2) {transition-delay: 1850ms;}
				&:nth-of-type(3) {transition-delay: 1750ms;}
				&:nth-of-type(4) {transition-delay: 1650ms;}
				&:nth-of-type(5) {
					transition: opacity 400ms 1800ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1800ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);
					@media screen and (min-width: $regular-page-breakpoint) {
						transition: opacity 400ms 1500ms cubic-bezier(.09,.64,.19,.99),
									transform 450ms 1500ms cubic-bezier(.09,.64,.19,.99),
									color 200ms cubic-bezier(.09,.64,.19,.99);
					}
					}
				&:nth-of-type(6) {
					transition: opacity 400ms 1700ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1700ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);
					@media screen and (min-width: $regular-page-breakpoint) {
						transition: opacity 400ms 1600ms cubic-bezier(.09,.64,.19,.99),
									transform 450ms 1600ms cubic-bezier(.09,.64,.19,.99),
									color 200ms cubic-bezier(.09,.64,.19,.99);
					}
					}
				&:nth-of-type(7) {
					transition: opacity 400ms 1600ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms 1600ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);
					@media screen and (min-width: $regular-page-breakpoint) {
						transition: opacity 400ms 1700ms cubic-bezier(.09,.64,.19,.99),
									transform 450ms 1700ms cubic-bezier(.09,.64,.19,.99),
									color 200ms cubic-bezier(.09,.64,.19,.99);
					}
					}
				&:nth-of-type(8) {
					transition: opacity 400ms  1500ms cubic-bezier(.09,.64,.19,.99),
								transform 450ms  1500ms cubic-bezier(.09,.64,.19,.99),
								color 200ms cubic-bezier(.09,.64,.19,.99);
					@media screen and (min-width: $regular-page-breakpoint) {
						transition: opacity 400ms 1800ms cubic-bezier(.09,.64,.19,.99),
									transform 450ms 1800ms cubic-bezier(.09,.64,.19,.99),
									color 200ms cubic-bezier(.09,.64,.19,.99);
					}
					}
			}

			.contact-icon {
				@include min_query(font-size, $regular-page-breakpoint, 2.8rem);
			}
		}
	}

	.section {
		// margin-bottom: 10vh;
		height: calc(100% - var(--margin-side-buttons-top) * 5);

		@media screen and(min-width: $regular-page-breakpoint) {
			height: 100%;
			margin: 0;
		}

		&-content {

			grid-template-rows: auto 1fr auto;

			@media screen and (min-width: $regular-page-breakpoint) {
				
				padding: calc(var(--margin-side-buttons-top) + 6vw) 
				0
				var(--margin-side-buttons-top)
				0;
				margin-right: calc(var(--margin-side-buttons-right) + 9vw);
				grid-template-columns: auto var(--button-size);
				grid-template-areas:
				"title all"
				"none next-project"
				"description description";
				
				grid-column-gap: 2vw;
			}
		}

		&-background {
			&:before {
				content: "";
				position: absolute;
				z-index: 1;
				bottom: 0;
				width: 100%;
				border-bottom: 3px $color-medium-grey solid;

			}

			&:after {
				content: "";
				position: absolute;
				z-index: 1;
				bottom: 0;
				border-bottom: 3px $color-red solid;
			}

			@media screen and (min-width: $regular-page-breakpoint) {

				left: 50%;
				top: 80%;

				&:after, &:before {
					bottom: unset;
					top: 0;
				}
			}

			@keyframes border-loader {
				0% {
					width: 100%;
				}
				3% {
					width: 0;
				}

				100% {
					width: 100%;
				}
			}			

			.background-squares {

				&-group {
					width: 100%;
				}

				&:nth-of-type(1) {
					.background-squares-group {
						$square-unit: 6vw;
					
						&-element {
							padding-top: $square-unit;
							width: $square-unit;
						}

						&:nth-of-type(1) {
							.background-squares-group-element {
								&:nth-of-type(1) {left: $square-unit}
								&:nth-of-type(2) {left: $square-unit * 2}
								&:nth-of-type(3) {left: $square-unit * 5}
								&:nth-of-type(4) {left: $square-unit; top: $square-unit}
								&:nth-of-type(5) {left: $square-unit * 3; top: $square-unit}
								&:nth-of-type(6) {left: $square-unit * 4; top: $square-unit}
								&:nth-of-type(7) {top: $square-unit * 2}
								&:nth-of-type(8) {top: $square-unit * 3}
							}
						}

						&:nth-of-type(2) {
							.background-squares-group-element {
								&:nth-of-type(1) {right: 0; bottom: 0}
								&:nth-of-type(2) {right: $square-unit; bottom: 0}
								&:nth-of-type(3) {right: $square-unit*2; bottom: 0}
								&:nth-of-type(4) {right: $square-unit*5; bottom: 0}
								&:nth-of-type(5) {right: 0; bottom: $square-unit}
								&:nth-of-type(6) {right: 0; bottom: $square-unit*4}
								&:nth-of-type(7) {right: 0; bottom: $square-unit*6}
								&:nth-of-type(8) {right: 0; bottom: $square-unit*7}
								&:nth-of-type(9) {right: $square-unit*2; bottom: $square-unit}
								&:nth-of-type(10) {right: $square-unit*3; bottom: $square-unit}
								&:nth-of-type(11) {right: $square-unit; bottom: $square-unit*3}
								&:nth-of-type(12) {right: $square-unit; bottom: $square-unit*4}
								&:nth-of-type(13) {right: $square-unit; bottom: $square-unit*5}
								&:nth-of-type(14) {right: $square-unit*2; bottom: $square-unit*2}
								&:nth-of-type(15) {right: $square-unit*2; bottom: $square-unit*3}
							}
						}

						&:nth-of-type(3) {
							.background-squares-group-element {
								&:nth-of-type(1) {right: $square-unit; top: $square-unit*2}
								&:nth-of-type(2) {right: $square-unit*2; top: $square-unit*3}
								&:nth-of-type(3) {right: $square-unit*3; top: $square-unit*4}
								&:nth-of-type(4) {right: $square-unit*4; top: $square-unit*2}
								&:nth-of-type(5) {right: $square-unit*4; top: $square-unit*3}
							}
						}
					}
				}

				&:nth-of-type(2) {					
					.background-squares-group {
						
						$square-unit: 3vw;
						width: 120%;
						transform: rotate3d(0, 0, 1, calc(0deg - var(--rotation)));

						&-element {
							padding-top: $square-unit;
							width: $square-unit;
						}


						&:nth-of-type(1) {

							position: absolute;
							top: 10vw;
							right: 7vw;

							.background-squares-group-element {
								&:nth-of-type(1) {top: $square-unit * 3; right: 0}
								&:nth-of-type(2) {top: $square-unit * 4; right: 0}
								&:nth-of-type(3) {top: $square-unit * 5; right: 0}
								&:nth-of-type(4) {top: $square-unit * 2; right: $square-unit * 2}
								&:nth-of-type(5) {top: $square-unit * 2; right: $square-unit * 3}
								&:nth-of-type(6) {top: $square-unit; right: $square-unit * 2}
								&:nth-of-type(7) {top: $square-unit; right: $square-unit * 4}
								&:nth-of-type(8) {top: $square-unit * 3; right: $square-unit}
								&:nth-of-type(9) {top: $square-unit * 6; right: $square-unit}
							}
						}

						&:nth-of-type(2) {

							position: absolute;
							left: 50%;
							top: 50%;
							width: $square-unit;
							height: $square-unit;
							transform: translate3d(-50%, -50%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
							
							.background-squares-group-element {
								&:nth-of-type(1) {bottom: $square-unit*3}
								&:nth-of-type(2) {bottom: $square-unit*5}
								&:nth-of-type(3) {bottom: $square-unit*4; left: $square-unit}
								&:nth-of-type(4) {bottom: $square-unit*6; left: $square-unit}
								&:nth-of-type(5) {bottom: $square-unit*4; right: $square-unit}
								&:nth-of-type(6) {bottom: $square-unit*3; left: $square-unit*2}
								&:nth-of-type(7) {bottom: $square-unit*2; left: 0}
								&:nth-of-type(8) {bottom: $square-unit*2; right: $square-unit}
								&:nth-of-type(9) {bottom: $square-unit; left: $square-unit}
								&:nth-of-type(10) {bottom: $square-unit; left: $square-unit*2}
								&:nth-of-type(11) {bottom: $square-unit; right: $square-unit}
								&:nth-of-type(12) {bottom: $square-unit; right: $square-unit*2}
								&:nth-of-type(13) {top: 0; left: $square-unit}
								&:nth-of-type(14) {top: 0; right: $square-unit}
								&:nth-of-type(15) {top: 0; right: $square-unit*3}
								&:nth-of-type(16) {top: $square-unit}
								&:nth-of-type(17) {top: $square-unit*2; left: $square-unit}
							}
						}
					}
				}	
			}
		}
	}
	
	.regular-title {
		justify-self: start;
		@include min_query(justify-self, $regular-page-breakpoint, end);
		@include min_query(text-align, $regular-page-breakpoint, right);
		
		.first-part:before {
			transition-delay: 600ms;
			@media screen and (min-width: $regular-page-breakpoint) {
				transition-delay: 00ms + $desktop-delay-offset;
				right: 0;
				left: unset;
			}
		}
		.first-part-content {
			transition-delay: 700ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 100ms + $desktop-delay-offset);
		}
		.second-part-content {
			transition-delay: 800ms;
			@include min_query(transition-delay, $regular-page-breakpoint, 200ms + $desktop-delay-offset);
		}
	}
	
	.description {
		align-self: end;
		
		transition-delay: 1000ms;
		@media screen and (min-width: $regular-page-breakpoint) {
			transition-delay: 1000ms + $desktop-delay-offset;
			justify-self: end;
			text-align: right;
		}
	}
	
	.continuer {
		transition-delay: 1200ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 800ms + $desktop-delay-offset);
	}

	.all {
		transition-delay: 500ms;
		@include min_query(transition-delay, $regular-page-breakpoint, 400ms + $desktop-delay-offset);
	}

	.next-project {
		@include min_query(transition-delay, $regular-page-breakpoint, 600ms + $desktop-delay-offset);

		&-after, &-before {
			@include min_query(transition-delay, $regular-page-breakpoint, 650ms + $desktop-delay-offset);
		}
	}

	.see-more:after {
		@media screen and (min-width: $regular-page-breakpoint) {
			left: unset;
			right: 0;
		}
	}

	&-title {
		display: inline-block;
		position: relative;
		color: #333131;
		@include interpolate(font-size, 40rem, 64rem, 1.2rem, 1.75rem);

		&:before {
			content: "";
			position: absolute;
			display: block;

			height: 1rem;
			width: 0;
			
			left: -0.2rem;
			bottom: -0.1rem;
			z-index: -1;

			transition: width 500ms 600ms cubic-bezier(0,.64,0,1.1);
			background: $color-light-grey;
		}
	}

	&.active {
		
		$project-exposition-time: 10s;

		.contact {
			&-background {
				@include interpolate(width, 400px, 1366px, 368px, 500px);
				@include interpolate(height, 400px, 1366px, 368px, 500px);
				transform: translate3d(50%, 50%, 0) rotate3d(0,0,1,-25deg);
				@include min_query(transform, $regular-page-breakpoint, translate3d(-50%, 50%, 0) rotate3d(0,0,1,-8deg));
			}
			
			&-content {
				&-link, &-title {
					opacity: 1;
					transform: translate3d(0, 0, 0);
				}
			}
		}

		.section {
			&-background {
				@media screen and (min-width: $regular-page-breakpoint) {	
					--rotation: 18.5deg;
					width: 192vh;
					height: 192vh;
				}

				&:after {
					animation: border-loader $project-exposition-time linear infinite;
				}
			}
		}

		.lab-title {
			
			&-content {
				animation: change-lab-title $project-exposition-time cubic-bezier(1,0,0,1) infinite;

				&:before {
					animation: hiding-lab-paragraph $project-exposition-time linear infinite;
				}
			}
			
			&:before {
				width: 100%;
			}

			@keyframes change-lab-title {
				0% {
					opacity: 0;
					transform: translate3d(10px,0,0);
				}
				5% {
					opacity: 1;
					transform: translate3d(0,0,0)
				}
				95% {
					opacity: 1;
					transform: translate3d(0,0,0)					
				}
				100% {
					opacity: 0;
					transform: translate3d(-10px,0,0);
				}
			}
		}

		.paragraph {
			max-width: 400px;
			animation: hiding-lab-paragraph $project-exposition-time linear infinite;

			@keyframes hiding-lab-paragraph {
				0% {
					opacity: 0;
				}
				5% {
					opacity: 1;
				}
				95% {
					opacity: 1;
				}
				100% {
					opacity: 0;
				}
			}
		}

		.photo-lab {
			transform: translate3d(-32%, -56%, 0);
			animation: photo-hiding-phone $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;

			@media screen and (min-width: $regular-page-breakpoint) {
				animation: photo-hiding-desktop-lab $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
			}
			
			@keyframes photo-hiding-desktop-lab {
				0% {
					transform: translate3d(-84%, -22%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
				}
				100% {
					transform: translate3d(-32%, -56%, 0) rotate3d(0, 0, 1, calc(0deg - var(--rotation)));
				}
			}

			img {
				height: 100%;
			}
		}
		
		.next-project {
			&-progress-circle {
				
				&-loading {
					animation: progress-loading $project-exposition-time * 2 infinite linear;
				}
				
				&-idle {
					animation: progress-idle $project-exposition-time * 2 infinite linear reverse;
				}
				
				@keyframes progress-loading {
					0% {
						stroke-dashoffset: -339.292;
					}
					100% {
						stroke-dashoffset: 339.292;
					}
					
				}
				
				@keyframes progress-idle {
					0% {
						stroke-dashoffset: 0;
					}
					100% {
						stroke-dashoffset: -339.292 * 2;
					}
					
				}
			}

			&-indicator {
				&-current {
					&-content {
						animation: indicator-hiding $project-exposition-time/2 cubic-bezier(0,.66,0,.99) infinite alternate;
					}
					
					@keyframes indicator-hiding {
						0% {
							right: calc(var(--right) - var(--lateral-offset));
						}
						
						10% {
							right: var(--right);
						}
					}
				}
			}
		}
	}
}
}