@import "_utils";

$nav-menu-background--size: 150vh;

.nav {

    @include interpolate(--burger--size, 320px, 1024px, 44px, 60px);

    --nav-center--margin-right: calc(var(--margin-side-buttons-right) - var(--burger--size) / 2);
    --nav-center--margin-top: calc(var(--margin-side-buttons-top) - var(--burger--size) / 2);

    position: fixed;

    overflow: hidden;

    width: 100%;
    height: 100vh;

    z-index: $z-index-menu;

    &-burger {

        width: var(--burger--size);
        height: var(--burger--size);

        right: var(--nav-center--margin-right);
        top: var(--nav-center--margin-top);
    
        transition: right 500ms cubic-bezier(.64,.01,.27,1);

        &-rect {
            transform-origin: center;
            transform: rotate3d(0, 0, 1, -245deg);
    
            fill:none;
            stroke: $color-lightest-grey;
            stroke-width:2;

            transition: all 1s cubic-bezier(.34,-0.23,.42,1);
        }
    
        &-line {

            transform-origin: center;
            stroke: $color-red;
            stroke-width:2;
            
            transition: all 1s cubic-bezier(.34,-0.23,.42,1),
                        stroke-dashoffset 200ms ease-in-out;

            &:nth-child(2) {
                stroke-dasharray: 12;
                stroke-dashoffset: 12;
            }
            &:nth-child(3) {
                stroke-dasharray: 12;
                stroke-dashoffset: -12;
            }

            &:nth-child(4) {transform: rotate3d(0, 0, 1, -385deg);}

            &:nth-child(5) {transform: rotate3d(0, 0, 1, -295deg);}
        }
    }

    &-menu {
        @include interpolate(--lateral-margin, 320px, 1366px, 0px, 50px);

        visibility: visible;
        height: 100%;

        &-background {

            position: absolute;
            z-index: -1;

            width: 150vh;
            height: 150vh;

            right: var(--margin-side-buttons-right);
            top: var(--margin-side-buttons-top);
    
            border: $color-red 2px solid;
            background-color: rgba($color-darkest-grey, .85);

            transform-origin: center;

            transform: translate3d(50%, -50%, 0) rotate3d(0,0,1,-26deg);
            
            @include min_query(width height, 600px, 155vh);
            @include min_query(transform, 600px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-20deg));
            @include min_query(width height, 933px, 165vh);
            @include min_query(transform, 933px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-17deg));
            @include min_query(width height, 1366px, 175vh);
            @include min_query(transform, 1366px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-13deg));

            transition: transform 3s 200ms cubic-bezier(.1,.86,0,1),
                        width 3s 200ms cubic-bezier(.1,.86,0,1),
                        height 3s 200ms cubic-bezier(.1,.86,0,1),
                        visibility 3s 200ms linear;
        }

        &-list {
            float: right;
            display: flex;
            flex-direction: column;
            justify-content: space-between;

            @include interpolate(width, 320px, 1500px, 240px, 400px);
            height: 100%;

            padding: 150px 0;
            margin: 0 calc(var(--margin-side-buttons-right) + var(--lateral-margin));   

            list-style: none;
        }

        &-item {
            transform: translate3d(0, 0px, 0);

            opacity: 1;
            @include min_query(text-align, $nav-breakpoint, right);

            transition: transform 2s cubic-bezier(0,.64,.17,.99),
                        opacity 1s cubic-bezier(0,.64,.17,.99),
                        visibility 2s linear;

                        
            &:nth-of-type(1) {
                transition-delay: 400ms;
                .hidden & {
                    @include min_query(transition-delay, $nav-breakpoint, 300ms);
                    transition-delay: 200ms;
                }
            }
            &:nth-of-type(2) {
                transition-delay: 500ms;
                .hidden & {
                    @include min_query(transition-delay, $nav-breakpoint, 250ms);
                    transition-delay: 150ms;
                }
            }
            &:nth-of-type(3) {
                transition-delay: 600ms;
                .hidden & {
                    @include min_query(transition-delay, $nav-breakpoint, 200ms);
                    transition-delay: 100ms;
                }
            }
            &:nth-of-type(4) {
                transition-delay: 700ms;
                .hidden & { transition-delay: 50ms; }
            }
            &:nth-of-type(5) {
                transition-delay: 700ms;
                .hidden & { transition-delay: 150ms; }
            }
            &:nth-of-type(6) {
                transition-delay: 800ms;
                .hidden & { transition-delay: 100ms; }
            }
            &:nth-of-type(7) {
                transition-delay: 900ms;
                .hidden & { transition-delay: 50ms; }
            }
            &:nth-of-type(8) {
                @include min_query(transition-delay, $nav-breakpoint, 1000ms);
                transition-delay: 800ms;
                .hidden & { transition-delay: 0; }
            }

            &:nth-last-of-type(1) { order: 10;}

            
        }

        &-link, &-contact {
            font-size: 1.875rem;
            font-weight: 200;
            text-decoration: none;
            text-transform: uppercase;
            transition: padding 300ms cubic-bezier(.09,.64,.19,.99);
            
            &:after {
                content: "";
                display: inline-block;
                position: absolute;

                right: -2rem;
                top: 50%;
                height: 0.5rem;
                width: 0.5rem;

                transform: translateY(-50%) rotate3d(0, 0, 1, 0deg);
                border: $color-red 2px solid;
                opacity: 0;
                transition: right 400ms cubic-bezier(.09,.64,.19,.99),
                            opacity 400ms cubic-bezier(.09,.64,.19,.99),
                            transform 450ms 50ms cubic-bezier(.09,.64,.19,.99);
            }

            &:hover {
                padding-right: 1.5rem;
                &:after {
                    transform: translateY(-50%) rotate3d(0, 0, 1, 45deg);
                    right: 0;
                    opacity: 1;
                }
            }
        }

        &-link {
            position: relative;
            display: inline-block;
            color: $color-lightest-grey;
            
            @include interpolate(font-size, 37.5rem, 93.75rem, 1.875rem, 2.5rem);
        }

        &-contact {
            color: $color-red;

            &.contact-icon {
                color: $color-lightest-grey;
                transition: all 200ms cubic-bezier(.09,.64,.19,.99);

                &:hover {
                    padding: 0;
                    color: $color-red;
                }

                &:after {
                    content: none;
                }
            }

            .v-m & {
                @include interpolate(font-size, 37.5rem, 93.75rem, 1.2rem, 1.5rem);
                color: $color-lightest-grey;
            }
        }
    }
}


.hidden {
    &.nav {
        width: 0;
        height: 0;

        transition: width 0s 1s linear,
                    height 0s 1s linear;
    }

    .nav {
        
        &-menu {
            visibility: hidden;
            &-background {
                width: 32px;
                height: 32px;

                transform: translate3d(50%, -50%, 0) rotate3d(0,0,1, 61.5deg);

                transition: transform 1s cubic-bezier(.55,.01,.44,.82),
                            width 1s cubic-bezier(.55,.01,.44,.82),
                            height 1s cubic-bezier(.55,.01,.44,.82),
                            visibility 1s linear,
                            display 0s 1s linear;
            }

            &-item {
                opacity: 0;
                transform: translate3d(0, -30px, 0);

                transition: transform 1.2s cubic-bezier(0,.64,.17,.99),
                            opacity 0.2s cubic-bezier(0,.64,.17,.99),
                            visibility 1.2s linear;
            }
        }

        &-burger {
        
            &-rect {
                transform: rotate3d(0, 0, 1, -30deg);
                stroke: $color-red;
            }
        
            &-line {
        
                transition: all 1s cubic-bezier(.34,-0.23,.42,1),
                stroke-dashoffset 200ms 800ms ease-in-out;

                stroke: $color-lightest-grey;

                transform-origin: center;
                transform: rotate3d(0, 0, 0, 0);

                &:nth-child(3), &:nth-child(2) {
                    stroke-dashoffset: 0;
                }
            }
        }
    }
}