@import "_interpolate";
@import "_media_queries";

$nav-menu-background--size: 150vh;
$nav-text--size: 1.875rem;
$nav-breakpoint: 600px;

.nav {

    @include interpolate(--burger--size, 360px, 1024px, 44px, 60px);

    --nav-center--margin: calc(var(--margin-side-buttons) - var(--burger--size) / 2);

    position: relative;

    overflow: hidden;

    width: 100%;
    height: 100vh;

    z-index: $z-index-menu;

    &-burger {

        width: var(--burger--size);
        height: var(--burger--size);

        right: var(--nav-center--margin);
        top: var(--nav-center--margin);
    
        &-rect {
            transform-origin: center;
            transform: rotate3d(0, 0, 1, -245deg);
    
            fill:none;
            stroke: $color-lightest-grey;
            stroke-width:2;

            transition: all 1s cubic-bezier(.34,-0.23,.42,1);
        }
    
        &-line {

            transform-origin: center;
            stroke: $color-red;
            stroke-width:2;
            
            transition: all 1s cubic-bezier(.34,-0.23,.42,1),
                        stroke-dashoffset 200ms ease-in-out;

            &:nth-child(2) {
                stroke-dasharray: 12;
                stroke-dashoffset: 12;
            }
            &:nth-child(3) {
                stroke-dasharray: 12;
                stroke-dashoffset: -12;
            }

            &:nth-child(4) {transform: rotate3d(0, 0, 1, -385deg);}

            &:nth-child(5) {transform: rotate3d(0, 0, 1, -295deg);}
        }
    }

    &-menu {
        @include interpolate(--lateral-margin, 360px, 1366px, 0px, 50px);

        visibility: visible;
        height: 100%;

        &-background {

            position: absolute;
            z-index: -1;

            width: 150vh;
            height: 150vh;

            right: var(--margin-side-buttons);
            top: var(--margin-side-buttons);
    
            border: $color-red 2px solid;
            background-color: rgba($color-darkest-grey, .85);

            transform-origin: center;

            transform: translate3d(50%, -50%, 0) rotate3d(0,0,1,-26deg);
            
            @include min_query(width height, 600px, 155vh);
            @include min_query(transform, 600px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-20deg));
            @include min_query(width height, 933px, 165vh);
            @include min_query(transform, 933px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-17deg));
            @include min_query(width height, 1366px, 175vh);
            @include min_query(transform, 1366px, translate3d(50%, -50%, 0) rotate3d(0,0,1,-13deg));

            transition: transform 3s 200ms cubic-bezier(.1,.86,0,1),
                        width 3s 200ms cubic-bezier(.1,.86,0,1),
                        height 3s 200ms cubic-bezier(.1,.86,0,1),
                        visibility 3s 200ms linear;
        }

        &-list {
            float: right;
            display: flex;
            flex-direction: column;
            justify-content: space-between;

            height: 100%;
            padding: 150px 0;

            @include interpolate(width, 360px, 1366px, 280px, 350px);

            margin: 0 calc(var(--margin-side-buttons) + var(--lateral-margin));


            // @include min_query(margin, 1024px, 0, );        

            list-style: none;
        }

        &-item {
            
            @include min_query(text-align, $nav-breakpoint, right);
            

            transform: translate3d(0, 0px, 0);
            opacity: 1;

            transition: transform 2s cubic-bezier(0,.64,.17,.99),
                        opacity 1s cubic-bezier(0,.64,.17,.99),
                        visibility 2s linear;

                        

            @for $i from 1 through 10 {
                $nav-offset-counter: 0;
                &:nth-of-type(#{$i}) {
                    @if $i != 5 and $i != 6 {
                        $nav-offset-counter: $nav-offset-counter + 1;
                    }
                    transition-delay: 400ms + ($nav-offset-counter - 1) * 100ms;
                }
                $nav-offset-counter: 0;
            }

            @media screen and (min-width: $nav-breakpoint) {
                $nav-offset-counter: 0;
                @for $i from 1 through 10 {
                    &:nth-of-type(#{$i}) {
                        @if $i != 4 {
                            $nav-offset-counter: $nav-offset-counter + 1;
                        }
                        transition-delay: 400ms + ($nav-offset-counter - 1) * 100ms;
                    }
                }
                $nav-offset-counter: 0;
            }

            &:nth-last-of-type(1) { order: 10;}
        }

        &-link, &-contact {
            font-size: $nav-text--size;
            font-weight: 200;
            text-decoration: none;
            text-transform: uppercase;
        }

        &-link {
            color: $color-lightest-grey;
        }

        &-contact {
            color: $color-red;
        }
    }
}

.v-m {
    .nav-menu-contact {
        font-size: 1.5rem;
        color: $color-lightest-grey;
    }
}

.hidden {

    .nav {
        
        &-menu {
            visibility: hidden;

            &-background {

                width: 32px;
                height: 32px;

                transform: translate3d(50%, -50%, 0) rotate3d(0,0,1, 61.5deg);

                transition: transform 1s cubic-bezier(.55,.01,.44,.82),
                            width 1s cubic-bezier(.55,.01,.44,.82),
                            height 1s cubic-bezier(.55,.01,.44,.82),
                            visibility 1s linear;
            }


            &-item {

                transform: translate3d(0, -30px, 0);
                opacity: 0;

                transition: transform 1.2s cubic-bezier(0,.64,.17,.99),
                            opacity 0.2s cubic-bezier(0,.64,.17,.99),
                            visibility 1.2s linear;

                @for $j from 1 through 10 {
                    &:nth-last-of-type(#{$j}) {
                        transition-delay: ($j - 1) * 50ms;
                    }
                }
            }
        }

        &-burger {
        
            &-rect {
                transform: rotate3d(0, 0, 1, -30deg);
                stroke: $color-red;
            }
        
            &-line {
        
                transition: all 1s cubic-bezier(.34,-0.23,.42,1),
                stroke-dashoffset 200ms 800ms ease-in-out;

                stroke: $color-lightest-grey;

                transform-origin: center;
                transform: rotate3d(0, 0, 0, 0);

                &:nth-child(3), &:nth-child(2) {
                    stroke-dashoffset: 0;
                }
            }
        }
    }
}